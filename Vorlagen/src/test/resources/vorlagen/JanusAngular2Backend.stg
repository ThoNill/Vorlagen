group JanusAngular2Backend ;

mypfad() ::= "janusAngular2Backend"

myclassName(x) ::=<<$x.Page; format="cap"$Page>>

dateiName(urmodell,model) ::= "$mypfad()$/$myclassName(model)$.java"

dateiInhalt(urmodell,model) ::= <<$element(model)$>>

element(x) ::= <<$if(x.isElement)$$(x.LocalName)(x)$$endif$ >>

childs(x) ::= << $x.Childs:element()$ >>


DIALOG(x) ::= << 

package $mypfad()$;

import janusAngular2Backend.basis.PageBasis;
import janusAngular2Backend.basis.CallTag;
import janusAngular2Backend.basis.ColumnTag;
import janusAngular2Backend.basis.SetTag;
import janusAngular2Backend.basis.SqlTag;
import janusAngular2Backend.basis.BeanTag;
import janusAngular2Backend.basis.BatchTag;



public class $myclassName(x)$ extends PageBasis {

public void init() {

$childs(x)$

}

}
>>

STRINGSET( x ) ::= << $childs(x)$ >>
SQLSET( x ) ::= << $childs(x)$ >>
BEANSET( x ) ::= << $childs(x)$ >>
BATCHSET( x ) ::= << $childs(x)$ >>
ACTIONSET( x ) ::= << $childs(x)$ >>
GLOBALSET( x ) ::= << $childs(x)$ >>
NAMESPACE( x ) ::= << $childs(x)$ >>

SQL(x) ::= << $internSQL(x)$ ; >>

internSQL(x) ::= <<
add( new SqlTag(this,"$x.name$","$x.stmt$") $x.Childs:element()$ ) 
>>

COLUMN(x) ::= << $internCOLUMN(x)$ >>

internCOLUMN(x) ::= << 
         .add(new ColumnTag(this,"$x.name$"))
>>

BEAN(x) ::= << 
  $internBEAN(x)$ ;
 >>

internBEAN(x) ::= << add(new BeanTag(this,"$x.name$",$x.class$.class) $x.Childs:element()$ ) >>
CALL(x) ::= << $iternCALL(x)$ >>
 
iternCALL(x) ::= << 
   .add(new CallTag(this,"$x.name$","$x.command$") $x.Childs:element()$ )

>>

SET(x) ::= << $internSET(x)$ >>

internSET(x) ::= << .add(new SetTag(this,"$x.var$","$x.to$")) 

>>

BATCH(x) ::= << add( new BatchTag(this,"$x.name$") $x.Childs:internElement()$ ); >>

internCALLREF(x) ::= << get$x.On; format="cap"$() $x.Childs:internElement()$  >>

internMusterName(x) ::= <<intern$x.LocalName$>>

internElement(x) ::= <<$if(x.isElement)$.$(internMusterName(x))(x)$ $endif$ >>

MAPTABLE(x) ::= <<  >>
GLOBAL(x) ::= <<  >>
STRING(x) ::= <<  >>
GUI(x) ::= <<  >>
 